C51 COMPILER V9.60.0.0   MAIN                                                              03/09/2025 16:31:12 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil5-1\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <main.h>
   2          #include <iic.h>
   3          #include <ds1302.h>
   4          void tast_clock()
   5          {
   6   1        
   7   1        if(++key_tt == 20) {key_tt = 0;key_scan();}
   8   1        if(++show_tt == 100) {show_tt = 0;show_ref = 1;}
   9   1        if(++AD_tt == 20) {AD_tt = 0;AD_ref = 1;}
  10   1        if(++time_tt == 500) {time_tt = 0;time_ref = 1;}
  11   1        if(++work_tt == 200) {work_tt =0;work_ref = 1;}
  12   1      }
  13          void main()
  14          {
  15   1        all_init();
  16   1        Timer0_Init();
  17   1        
  18   1        //AT24C02_w(0x01,0);delay_ms(5);
  19   1        open = AT24C02_r(0x01);delay_ms(5);
  20   1        AT24C02_w(0x01,++open);delay_ms(5);
  21   1        time_init();time_get();
  22   1        while(1)
  23   1        {
  24   2          delay_ms(1);
  25   2          if(show_ref == 1)
  26   2          {
  27   3            show_ref = 0;
  28   3            tast_seg();
  29   3            
  30   3          }
  31   2          if(key_flag == 1)
  32   2          {
  33   3            key_flag = 0;
  34   3            tast_key();
  35   3          }
  36   2          if(AD_ref == 1)
  37   2          {
  38   3            AD_ref = 0;
  39   3            AD_value = AD_r(0x03)*0.39;
  40   3          }
  41   2          if(time_ref == 1)
  42   2          {
  43   3            time_ref = 0;
  44   3            time_get();
  45   3          }
  46   2          if(work_ref == 1)
  47   2          {
  48   3            work_ref = 0;
  49   3            work();
  50   3          }
  51   2        }
  52   1      }
  53            
  54          void tast_seg()
C51 COMPILER V9.60.0.0   MAIN                                                              03/09/2025 16:31:12 PAGE 2   

  55          {
  56   1        switch(show_state)
  57   1        {
  58   2          case 1:
  59   2          {
  60   3            seg_buf[0] = time2[2]/10;
  61   3            seg_buf[1] = time2[2]%10;
  62   3            seg_buf[2] = 21;
  63   3            seg_buf[3] = time2[1]/10;
  64   3            seg_buf[4] = time2[1]%10;
  65   3            seg_buf[5] = 20;
  66   3            seg_buf[6] = AD_value/10;
  67   3            seg_buf[7] = AD_value%10;
  68   3          }
  69   2          break;
  70   2          case 2:
  71   2          {
  72   3            seg_buf[0] = 21;
  73   3            seg_buf[1] = 21;
  74   3            seg_buf[2] = 20;
  75   3            seg_buf[3] = 20;
  76   3            seg_buf[4] = 20;
  77   3            seg_buf[5] = 20;
  78   3            seg_buf[6] = humidity_flag/10;
  79   3            seg_buf[7] = humidity_flag%10;
  80   3          }
  81   2          break;
  82   2        }
  83   1      }
  84          
  85          void work()
  86          {
  87   1        if(work_state == 0)
  88   1        {
  89   2          ledx_on(1);ledx_off(2);
  90   2          if(AD_value>=humidity_flag)
  91   2          {
  92   3            relay_off;
  93   3          }
  94   2          else
  95   2          {
  96   3            relay_on;
  97   3          }
  98   2        }
  99   1        else 
 100   1        {
 101   2          ledx_on(2);ledx_off(1);
 102   2        }
 103   1        if(buzzer_flag == 0)
 104   1          {
 105   2            if(AD_value<humidity_flag) {ledx_on(8);}
 106   2            else 
 107   2            {
 108   3              ledx_off(8);
 109   3            }
 110   2              
 111   2          }
 112   1          else 
 113   1          {
 114   2            ledx_off(8);
 115   2          }
 116   1      }
C51 COMPILER V9.60.0.0   MAIN                                                              03/09/2025 16:31:12 PAGE 3   

 117          
 118          void tast_key()
 119          {
 120   1        if(key_value == 7)
 121   1        {
 122   2          if(work_state == 0) work_state = 1;
 123   2          else if(work_state == 1) work_state = 0;
 124   2          key_value = 0;
 125   2        }
 126   1        if(work_state == 0) // 自动
 127   1        {
 128   2          if(key_value == 6)
 129   2          {
 130   3            if(show_state == 2){show_state = 1;AT24C02_w(0x02,humidity_flag);}
 131   3            else
 132   3                {
 133   4                  show_state = 2;
 134   4                }
 135   3            key_value = 0;
 136   3          }
 137   2          if((key_value == 5)&&(show_state == 2))
 138   2          {
 139   3            humidity_flag++;
 140   3            key_value = 0;
 141   3          }
 142   2          if((key_value == 4)&&(show_state == 2))
 143   2          {
 144   3            humidity_flag--;
 145   3            key_value = 0;
 146   3          }
 147   2        }
 148   1        else //手动
 149   1        {
 150   2          if(buzzer_flag == 0)
 151   2          {
 152   3            if(AD_value<humidity_flag) {ledx_on(8);}
 153   3            else 
 154   3            {
 155   4              ledx_off(8);
 156   4            }
 157   3          }
 158   2          else 
 159   2          {
 160   3            ledx_off(8);
 161   3          }
 162   2          if(key_value == 6)
 163   2          {
 164   3            if(buzzer_flag == 0) {buzzer_flag = 1;}
 165   3            else 
 166   3            {
 167   4              buzzer_flag = 0;
 168   4            }
 169   3            key_value = 0;
 170   3          }
 171   2          if(key_value == 5)
 172   2          {
 173   3            relay_on;
 174   3            key_value = 0;
 175   3          }
 176   2          if(key_value == 4)
 177   2          {
 178   3            relay_off;
C51 COMPILER V9.60.0.0   MAIN                                                              03/09/2025 16:31:12 PAGE 4   

 179   3            key_value = 0;
 180   3          }
 181   2        }
 182   1      }
 183          
 184          void Time0 () interrupt 1
 185          {
 186   1        P0 = 0X00;
 187   1        P2|=0XC0;P2&=0XDF;
 188   1        P2&=0X1F; 
 189   1        P0 = seg_num[seg_buf[num]];
 190   1        P2|=0XE0;
 191   1        P2&=0X1F;
 192   1        P0 = _crol_(0x01,num);
 193   1        P2|=0XC0;P2&=0XDF;
 194   1        P2&=0X1F;
 195   1        if(++num == 8) num = 0;
 196   1        
 197   1        tast_clock();
 198   1      }
 199          
 200          void Timer0_Init(void)    //1毫秒@11.0592MHz
 201          {
 202   1        AUXR |= 0x80;     //定时器时钟1T模式
 203   1        TMOD &= 0xF0;     //设置定时器模式
 204   1        TL0 = 0xCD;       //设置定时初始值
 205   1        TH0 = 0xD4;       //设置定时初始值
 206   1        TF0 = 0;        //清除TF0标志
 207   1        TR0 = 1;  //定时器0开始计时
 208   1        EA = 1;
 209   1        ET0 = 1;
 210   1      }
 211          
 212          
 213          void all_init()
 214          {
 215   1        P0 = 0XFF;
 216   1        P2|= 0X80;P2&=0X9F;
 217   1        P2&=0X1F; //流水灯
 218   1        P0 = 0XFF;
 219   1        P2|=0XE0; //段选端
 220   1        P2&=0X1F;
 221   1        P0 = 0X00;
 222   1        P2|=0XC0;P2&=0XDF;
 223   1        P2&=0X1F; //位选端
 224   1        P0 = 0X00;
 225   1        P2|=0XA0;P2&=0XBF;
 226   1        P2&=0X1F; //蜂鸣器继电器
 227   1      }
 228          void key_scan()
 229          {
 230   1        switch(key_state)
 231   1        {
 232   2          case key_check:
 233   2          {
 234   3            if((P30 ==0) || (P31 ==0) ||(P32 ==0) ||(P33 ==0))
 235   3              key_state = key_press;
 236   3          }
 237   2          break;
 238   2          case key_press:
 239   2          {
 240   3            if(P30 ==0) key_value = 7;
C51 COMPILER V9.60.0.0   MAIN                                                              03/09/2025 16:31:12 PAGE 5   

 241   3            if(P31 ==0) key_value = 6;
 242   3            if(P32 ==0) key_value = 5;
 243   3            if(P33 ==0) key_value = 4;
 244   3            key_state = key_release;
 245   3          }
 246   2          break;
 247   2          case key_release:
 248   2          {
 249   3            if((P30 ==0) || (P31 ==0) ||(P32 ==0) ||(P33 ==0))
 250   3            {
 251   4              key_time+=10;
 252   4            }
 253   3            else 
 254   3            {
 255   4              key_state = key_check;
 256   4              key_flag = 1;
 257   4            }
 258   3          }
 259   2          break;
 260   2        }
 261   1      }
 262          void delay_ms(uint ms)
 263          {
 264   1        uint i,j;
 265   1        for(i=0;i<ms;i++)
 266   1          for(j=0;j<853;j++);
 267   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1162    ----
   CONSTANT SIZE    =     44    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     39    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      7    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
