C51 COMPILER V9.60.0.0   MAIN                                                              03/13/2025 17:17:54 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil5-1\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <main.h>
   2          #include <onewire.h>
   3          #include <ds1302.h>
   4          void tast_clock()
   5          {
   6   1        if(++key_tt == 20) {key_tt = 0;key_scan();}
   7   1        if(++show_tt == 20) {show_tt = 0;show_ref = 1;}
   8   1        if(++temp_tt == 900) {temp_tt = 0;temp_ref = 1;}
   9   1        if(++time_tt == 500) {time_tt = 0;time_ref = 1;}
  10   1        if(++led_tt == 500) {led_tt = 0;led_ref = 1;}
  11   1        if(show_state == 2)
  12   1        {
  13   2          if(++collect_tt == scan_time*1000) {collect_tt = 0;collect_ref = 1;}
  14   2        }
  15   1      }
  16          
  17          
  18          void main()
  19          {
  20   1        all_init();
  21   1        temp_get();delay_ms(850);
  22   1        temp_val = temp_get()*625;
  23   1        Timer0_Init();
  24   1        time_init();time_get();
  25   1        while(1)
  26   1        {
  27   2          if(key_flag == 1)
  28   2          {
  29   3            key_flag = 0;
  30   3            tast_key();
  31   3          }
  32   2          if(show_ref == 1)
  33   2          {
  34   3            show_ref = 0;
  35   3            tast_show();
  36   3          }
  37   2          if(temp_ref == 1)
  38   2          {
  39   3            temp_ref = 0;
  40   3            temp_val = temp_get()*625;
  41   3          }
  42   2          if(time_ref == 1)
  43   2          {
  44   3            time_ref = 0;
  45   3            time_get();
  46   3          }
  47   2          if(collect_ref == 1)
  48   2          {
  49   3            collect_ref = 0;
  50   3            collect_store[collect_count] = (temp_val/100000)*10+temp_val%100000/10000;
  51   3            if(++collect_count == 10) {show_state = 3;led_flag = 1;}
  52   3          }
  53   2          if((led_ref == 1)&&(led_flag == 1))
  54   2          {
C51 COMPILER V9.60.0.0   MAIN                                                              03/13/2025 17:17:54 PAGE 2   

  55   3            led_ref = 0;
  56   3            if(led == 0) {led = 1;ledx_on(1);}
  57   3            else {led = 0;ledx_off(1);}
  58   3          }
  59   2        }
  60   1      }
  61          
  62          void tast_key()
  63          {
  64   1        if(key_val == 7)
  65   1        {
  66   2          key_val = 0;
  67   2          if(show_state == 3) {show_state = 1;indexes = 0;}
  68   2        }
  69   1        else if(key_val == 6)
  70   1        {
  71   2          key_val = 0;
  72   2          ledx_off(1);led_flag = 0;
  73   2          if(show_state == 3)
  74   2          {
  75   3            if(++indexes == 10) {indexes = 0;}
  76   3          }
  77   2        }
  78   1        else if(key_val == 5)
  79   1        {
  80   2          key_val = 0;
  81   2          if(show_state  == 1){show_state = 2;collect_count = 0;}
  82   2        }
  83   1        else if(key_val == 4)
  84   1        {
  85   2          key_val = 0;
  86   2          if(show_state == 1)
  87   2          {
  88   3            if(scan_time == 1) {scan_time = 5;}
  89   3          else if(scan_time == 5) {scan_time = 30;}
  90   3          else if(scan_time == 30) {scan_time = 60;}
  91   3          else if(scan_time == 60) {scan_time = 1;}
  92   3          }
  93   2          
  94   2        }
  95   1      }
  96          
  97          void tast_show()
  98          {
  99   1        switch(show_state)
 100   1        {
 101   2          case 1:
 102   2          {
 103   3            seg_buf[0] = 20;
 104   3            seg_buf[1] = 20;
 105   3            seg_buf[2] = 20;
 106   3            seg_buf[3] = 20;
 107   3            seg_buf[4] = 20;
 108   3            seg_buf[5] = 21;
 109   3            seg_buf[6] = scan_time/10;
 110   3            seg_buf[7] = scan_time%10;
 111   3          }
 112   2          break;
 113   2          case 2:
 114   2          {
 115   3            seg_buf[0] = time2[2]/10;
 116   3            seg_buf[1] = time2[2]%10;
C51 COMPILER V9.60.0.0   MAIN                                                              03/13/2025 17:17:54 PAGE 3   

 117   3            
 118   3            seg_buf[3] = time2[1]/10;
 119   3            seg_buf[4] = time2[1]%10;
 120   3            
 121   3            seg_buf[6] = time2[0]/10;
 122   3            seg_buf[7] = time2[0]%10;
 123   3            if(time2[0]%2 == 0) {seg_buf[2] = 21;seg_buf[5] = 21;}
 124   3            else if(time2[0]%2 == 1) {seg_buf[2] = 20;seg_buf[5] = 20;}
 125   3          }
 126   2          break;
 127   2          case 3:
 128   2          {
 129   3            seg_buf[0] = 21;
 130   3            seg_buf[1] = 0;
 131   3            seg_buf[2] = indexes%10;
 132   3            seg_buf[3] = 20;
 133   3            seg_buf[4] = 20;
 134   3            seg_buf[5] = 21;
 135   3            seg_buf[6] = collect_store[indexes]/10;
 136   3            seg_buf[7] = collect_store[indexes]%10;
 137   3            
 138   3            
 139   3          }
 140   2          break;
 141   2        }
 142   1      }
 143          
 144          void key_scan()
 145          {
 146   1        switch(keystate)
 147   1        {
 148   2          case key_check:
 149   2          {
 150   3            if((P30 == 0)||(P31 == 0)||(P32 == 0)||(P33 == 0)) keystate = key_press;
 151   3          }
 152   2          break;
 153   2          case key_press:
 154   2          {
 155   3            if(P30 == 0) key_val = 7;
 156   3            if(P31 == 0) key_val = 6;
 157   3            if(P32 == 0) key_val = 5;
 158   3            if(P33 == 0) key_val = 4;
 159   3            keystate = key_release;
 160   3          }
 161   2          break;
 162   2          case key_release:
 163   2          {
 164   3            if((P30 == 0)||(P31 == 0)||(P32 == 0)||(P33 == 0))
 165   3            {
 166   4              key_time+=10;
 167   4            }
 168   3            else 
 169   3            {
 170   4              keystate = key_check;
 171   4              key_flag = 1;
 172   4            }
 173   3          }
 174   2          break;
 175   2        }
 176   1      }
 177          
 178          void time () interrupt 1
C51 COMPILER V9.60.0.0   MAIN                                                              03/13/2025 17:17:54 PAGE 4   

 179          {
 180   1        P0 = 0X00;
 181   1        P2|=0XC0;P2&=0XDF;
 182   1        P2&=0X1F;
 183   1        P0 = seg_num[seg_buf[seg_count]];
 184   1        P2|=0XE0;
 185   1        P2&=0X1F;
 186   1        P0 = _crol_(0x01,seg_count);
 187   1        P2|=0XC0;P2&=0XDF;
 188   1        P2&=0X1F;
 189   1        if(++seg_count == 8) seg_count = 0;
 190   1        
 191   1        tast_clock();
 192   1      }
 193          
 194          void all_init()
 195          {
 196   1        P0 = 0XFF;
 197   1        P2|=0X80;P2&=0X9F;
 198   1        P2&=0X1F; // 流水灯
 199   1        P0 = 0XFF;
 200   1        P2|=0XE0;
 201   1        P2&=0X1F; // 段
 202   1        P0 = 0X00;
 203   1        P2|=0XC0;P2&=0XDF;
 204   1        P2&=0X1F; // 位
 205   1        P0 = 0X00;
 206   1        P2|=0XA0;P2&=0XBF;
 207   1        P2&=0X1F; //蜂鸣器继电器
 208   1      }
 209          
 210          void Timer0_Init(void)    //1毫秒@11.0592MHz
 211          {
 212   1        AUXR |= 0x80;     //定时器时钟1T模式
 213   1        TMOD &= 0xF0;     //设置定时器模式
 214   1        TL0 = 0xCD;       //设置定时初始值
 215   1        TH0 = 0xD4;       //设置定时初始值
 216   1        TF0 = 0;        //清除TF0标志
 217   1        TR0 = 1;        //定时器0开始计时
 218   1        EA =1;
 219   1        ET0 = 1;
 220   1      }
 221          
 222          
 223          
 224          void delay_ms(uint ms)
 225          {
 226   1        uint i,j;
 227   1        for(i=0;i<ms;i++)
 228   1          for(j=0;j<853;j++);
 229   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1204    ----
   CONSTANT SIZE    =     44    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     67    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      6    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.60.0.0   MAIN                                                              03/13/2025 17:17:54 PAGE 5   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
